<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springframework.org/schema/integration/ymsg"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			xmlns:beans="http://www.springframework.org/schema/beans"
			xmlns:tool="http://www.springframework.org/schema/tool"
			xmlns:integration="http://www.springframework.org/schema/integration"
			targetNamespace="http://www.springframework.org/schema/integration/ymsg"
			elementFormDefault="qualified"
			attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"/>
	<xsd:import namespace="http://www.springframework.org/schema/tool"/>
	<xsd:import namespace="http://www.springframework.org/schema/integration"
				schemaLocation="http://www.springframework.org/schema/integration/spring-integration-2.0.xsd"/>

	<xsd:element name="ymsg-connection">
        <xsd:annotation>
			<xsd:documentation>
				Configures an YMSG connection that can in turn be referenced by other components
			</xsd:documentation>
		</xsd:annotation>
        
        <xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" use="required" />
			<xsd:attribute name="user" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The user name (e.g., somuser@yahoo.com) that will be used by this connection object
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-startup" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation>
						Lifecycle attribute signaling if this component should be started during Application Context startup.
						Default is TRUE
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="password" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The user's password
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="host" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						The host name to connect TO
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
<!--			<xsd:attribute name="service-name" type="xsd:string">-->
<!--				<xsd:annotation>-->
<!--					<xsd:documentation>-->
<!--						The XMPP service name for this connection-->
<!--					</xsd:documentation>-->
<!--				</xsd:annotation>-->
<!--			</xsd:attribute>-->
<!--			<xsd:attribute name="resource" type="xsd:string">-->
<!--				<xsd:annotation>-->
<!--					<xsd:documentation>-->
<!--					The resource field specifies the XMPP resource you are using. The use of unique resources allows -->
<!--					you to connect to your XMPP server from multiple locations simultaneously. Resources might-->
<!--					</xsd:documentation>-->
<!--				</xsd:annotation>-->
<!--			</xsd:attribute>-->
			<xsd:attribute name="port" type="xsd:string" default="5050">
				<xsd:annotation>
					<xsd:documentation>
						The port on which the host is running
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
<!--			<xsd:attribute name="subscription-mode" default="accept_all">-->
<!--				<xsd:annotation>-->
<!--					<xsd:documentation><![CDATA[-->
<!--    The subscription mode for the XMPP connection. Dictates the policy for handling inbound messages from entries not already on the roster.-->
<!--    Values can be "accept_all," "manual," or "reject_all."-->
<!--				]]></xsd:documentation>-->
<!--				</xsd:annotation>-->
<!--				<xsd:simpleType>-->
<!--					<xsd:restriction base="xsd:NMTOKEN">-->
<!--						<xsd:enumeration value="accept_all" />-->
<!--						<xsd:enumeration value="manual" />-->
<!--						<xsd:enumeration value="reject_all" />-->
<!--					</xsd:restriction>-->
<!--				</xsd:simpleType>-->
<!--			</xsd:attribute>-->
		</xsd:complexType>
    </xsd:element>

	<xsd:element name="inbound-channel-adapter">
		
        <xsd:annotation>
			<xsd:documentation>
				Configures an endpoint that will receive Yahoo chat messages sent to a given account and then forward those messages to a MessageChannel.
			</xsd:documentation>
		</xsd:annotation>
        
        <xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" />
			<xsd:attribute name="extract-payload" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation>
					Specifies if generated Message payload should consist of only 
					the text of the XMPP message or the entire XMPP (Smack API specific) message. Default is true.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-startup" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation>
						Lifecycle attribute signaling if this component should be started during Application Context startup.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>		
			<xsd:attribute name="channel" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
					Identifies channel attached to this adapter. Depending on the type of the adapter 
					this channel could be the receiving channel (e.g., outbound-channel-adapter) or channel where 
					messages will be sent to by this adapter (e.g., inbound-channel-adapter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ymsg-connection" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="dev.mj.ymsg.YmsgConnection" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Reference to YMSG connection bean
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
    </xsd:element>

	<xsd:element name="outbound-channel-adapter">
		
        <xsd:annotation>
			<xsd:documentation>
				Outbound Channel Adapter that sends Yahoo chat messages.
			</xsd:documentation>
		</xsd:annotation>
        
        <xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1" />
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:string" />
			<xsd:attribute name="channel" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
					Identifies channel attached to this adapter. Depending on the type of the adapter 
					this channel could be the receiving channel (e.g., outbound-channel-adapter) or channel where 
					messages will be sent to by this adapter (e.g., inbound-channel-adapter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ymsg-connection" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="dev.mj.ymsg.YmsgConnection" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Reference to YMSG connection bean
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
    </xsd:element>
    
    <!--

	<xsd:element name="presence-inbound-channel-adapter">
		
        <xsd:annotation>
			<xsd:documentation>
				Configures an endpoint that will forward Presence state changes to a MessageChannel.
			</xsd:documentation>
		</xsd:annotation>
        
        <xsd:complexType>
			<xsd:attribute name="id" type="xsd:string" />
			<xsd:attribute name="extract-payload" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation>
					Specifies if generated Message payload should consist of only 
					the text of the XMPP Presence message or the entire XMPP Presence (Smack API specific) message. 
					Default is TRUE.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-startup" type="xsd:string" default="true">
				<xsd:annotation>
					<xsd:documentation>
						Lifecycle attribute signaling if this component should be started during Application Context startup.
						Default is TRUE
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="channel" use="required" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
					Identifies channel attached to this adapter. Depending on the type of the adapter 
					this channel could be the receiving channel (e.g., outbound-channel-adapter) or channel where 
					messages will be sent to by this adapter (e.g., inbound-channel-adapter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="xmpp-connection" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.jivesoftware.smack.XMPPConnection" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Reference to XMPP connection bean
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
    </xsd:element>

	<xsd:element name="presence-outbound-channel-adapter">
		
        <xsd:annotation>
			<xsd:documentation>
				Configures an endpoint that will publish an updated {@link org.jivesoftware.smack.packet.Presence} state on your {@link XMPPConnection } object.
			</xsd:documentation>
		</xsd:annotation>
        
        <xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1" />
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:string" />
			<xsd:attribute name="channel" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.core.MessageChannel" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
					Identifies channel attached to this adapter. Depending on the type of the adapter 
					this channel could be the receiving channel (e.g., outbound-channel-adapter) or channel where 
					messages will be sent to by this adapter (e.g., inbound-channel-adapter).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="xmpp-connection" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.jivesoftware.smack.XMPPConnection" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Reference to XMPP connection bean
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
    </xsd:element>

	<xsd:element name="header-enricher">
		
        <xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines a Transformer for adding XMPP headers.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="transformerType">
					<xsd:choice minOccurs="1" maxOccurs="unbounded">
						<xsd:element name="chat-to" type="headerType">
							<xsd:annotation>
								<xsd:documentation>
								The id of the user you sending a message to (e.g., user@gmail.com)
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element name="chat-thread-id" type="headerType">
							<xsd:annotation>
								<xsd:documentation>
									The conversation thread id used to corelate XMPP packets as 
									belonging to a particular conversation
								</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="default-overwrite">
						<xsd:annotation>
							<xsd:documentation>
								Specify the default boolean value for whether to overwrite existing header values. This will only take effect for
								sub-elements that do not provide their own 'overwrite' attribute. If the 'default-overwrite' attribute is not
								provided, then the specified header values will NOT overwrite any existing ones with the same header names.
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:union memberTypes="xsd:boolean xsd:string" />
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
    </xsd:element>

	<xsd:complexType name="headerType">
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Value of this header inside of a Message
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ref" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
					Reference to a bean that contains a method that will compute the header value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="expression" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
				SpEL expression that will compute the header value
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="overwrite">
			<xsd:annotation>
				<xsd:documentation>
					Boolean value to indicate whether this header value should overwrite an existing header value for the same name.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:union memberTypes="xsd:boolean xsd:string" />
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="transformerType">
		<xsd:attribute name="id" type="xsd:string" />
		<xsd:attribute name="input-channel" type="xsd:string">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="org.springframework.integration.core.MessageChannel"/>
					</tool:annotation>
				</xsd:appinfo>
				<xsd:documentation>
				The receiving Message channel of this endpoint
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="output-channel" type="xsd:string">
			<xsd:annotation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="org.springframework.integration.core.MessageChannel"/>
					</tool:annotation>
				</xsd:appinfo>
				<xsd:documentation>
				Identifies the Message channel where Message will be sent after it's being processed by this endpoint
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
</xsd:element>
-->
</xsd:schema>
